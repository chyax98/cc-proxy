[project]
name = "cc-proxy-app"
version = "1.0.0"
description = "FastAPI 微服务架构 - Claude & OpenAI Responses API 代理"
readme = "README.md"
requires-python = ">=3.11"
authors = [
    { name = "chyax98", email = "chyax98@gmail.com" }
]
license = { text = "MIT" }

dependencies = [
    # FastAPI 核心
    "fastapi>=0.115.0",
    "uvicorn[standard]>=0.34.0",
    "gunicorn>=23.0.0", # 生产环境 WSGI 服务器
    # 数据验证
    "pydantic>=2.10.0",
    "pydantic-settings>=2.7.0",
    # HTTP 客户端
    "httpx[http2]>=0.28.0",
    # 日志系统
    "structlog>=24.4.0",
    # 配置
    "python-dotenv>=1.0.0",
    # 系统监控 (用于内存��化)
    "psutil>=5.9.0",
]

[project.optional-dependencies]
dev = [
    # 测试
    "pytest>=8.3.0",
    "pytest-asyncio>=0.24.0",
    "pytest-cov>=6.0.0",

    # 代码质量
    "ruff>=0.8.0",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["app"]

[tool.ruff]
line-length = 100
target-version = "py311"
exclude = [".venv", ".git", "__pycache__", "*.pyc", "tests/fixtures"]

[tool.ruff.lint]
# 启用的规则组
select = [
    "E",      # pycodestyle errors
    "F",      # pyflakes
    "I",      # isort (导入排序)
    "N",      # pep8-naming
    "W",      # pycodestyle warnings
    "B",      # flake8-bugbear
    "C90",    # mccabe (复杂度)
    "UP",     # pyupgrade
    "SIM",    # flake8-simplify
    "RUF",    # Ruff-specific rules
]

# 忽略的规则
ignore = [
    "E501",    # 行长度 (已通过 line-length 控制)
    "RUF022",  # __all__ 排序 (保留注释分组)
    "RUF001",  # 全角字符 (中文注释和文档字符串)
    "RUF002",  # 全角字符 (中文注释和文档字符串)
    "RUF003",  # 全角字符 (中文注释和文档字符串)
    "N999",    # 模块名 (service-cc 是合法的)
    "ARG001",  # 未使用的函数参数 (接口要求)
    "ARG002",  # 未使用的方法参数 (接口要求)
    "B027",    # 空方法无抽象装饰器 (可选方法)
]

[tool.ruff.lint.mccabe]
# 最大复杂度
max-complexity = 15

[tool.ruff.lint.isort]
# 导入排序配置
known-first-party = ["common", "service-cc", "service-cx"]
section-order = ["future", "standard-library", "third-party", "first-party", "local-folder"]

[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"

[tool.mypy]
python_version = "3.11"
strict = true
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
exclude = [
    "^service-cc/",
    "^service-cx/",
]

# 为带连字符的模块配置
[[tool.mypy.overrides]]
module = "service-cc.*"
ignore_errors = false

[[tool.mypy.overrides]]
module = "service-cx.*"
ignore_errors = false
